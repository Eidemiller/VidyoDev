//
//	VidyoConnector_Objc.h
//	VidyoClient
//
//	This file is auto generated, do not edit this file
//	Copyright (c) 2016 Vidyo, Inc. All rights reserved.
//

#import "VidyoChatMessage_Objc.h"
#import "VidyoDevice_Objc.h"
#import "VidyoLocalCamera_Objc.h"
#import "VidyoLocalMicrophone_Objc.h"
#import "VidyoLocalMonitor_Objc.h"
#import "VidyoLocalSpeaker_Objc.h"
#import "VidyoLocalWindowShare_Objc.h"
#import "VidyoLogRecord_Objc.h"
#import "VidyoNetworkInterface_Objc.h"
#import "VidyoParticipant_Objc.h"
#import "VidyoRemoteCamera_Objc.h"
#import "VidyoRemoteMicrophone_Objc.h"
#import "VidyoRemoteWindowShare_Objc.h"
typedef NS_ENUM(NSInteger, ConnectorDisconnectReason){
	CONNECTORDISCONNECTREASON_ConnectionLost,
	CONNECTORDISCONNECTREASON_ConnectionTimeout,
	CONNECTORDISCONNECTREASON_Disconnected,
	CONNECTORDISCONNECTREASON_MiscError,
	CONNECTORDISCONNECTREASON_MiscLocalError,
	CONNECTORDISCONNECTREASON_MiscRemoteError,
	CONNECTORDISCONNECTREASON_NoResponse,
	CONNECTORDISCONNECTREASON_Terminated
};
typedef NS_ENUM(NSInteger, ConnectorFailReason){
	CONNECTORFAILREASON_Banned,
	CONNECTORFAILREASON_ConnectionFailed,
	CONNECTORFAILREASON_ConnectionLost,
	CONNECTORFAILREASON_ConnectionTimeout,
	CONNECTORFAILREASON_InvalidResourceId,
	CONNECTORFAILREASON_InvalidToken,
	CONNECTORFAILREASON_MediaFailed,
	CONNECTORFAILREASON_MediaNotEnabled,
	CONNECTORFAILREASON_MiscError,
	CONNECTORFAILREASON_MiscLocalError,
	CONNECTORFAILREASON_MiscRemoteError,
	CONNECTORFAILREASON_NoResponse,
	CONNECTORFAILREASON_NoResponseFromResource,
	CONNECTORFAILREASON_NotMember,
	CONNECTORFAILREASON_ResourceFull,
	CONNECTORFAILREASON_Terminated,
	CONNECTORFAILREASON_UnableToCreateResource
};
typedef NS_ENUM(NSInteger, ConnectorMode){
	CONNECTORMODE_Background,
	CONNECTORMODE_Default,
	CONNECTORMODE_Foreground
};
typedef NS_ENUM(NSInteger, ConnectorState){
	CONNECTORSTATE_Connected,
	CONNECTORSTATE_ConnectingToResource,
	CONNECTORSTATE_EnablingMedia,
	CONNECTORSTATE_EstablishingConnection,
	CONNECTORSTATE_FindingResource,
	CONNECTORSTATE_Idle,
	CONNECTORSTATE_Ready
};
typedef NS_ENUM(NSInteger, ConnectorViewStyle){
	CONNECTORVIEWSTYLE_Default,
	CONNECTORVIEWSTYLE_Tiles
};
@interface VidyoClientConnector : NSObject
{}

	+(BOOL) Initialize;
	+(void) Uninitialize;
@end
@protocol IConnect

	-(void) OnSuccess;
	-(void) OnFailure:(ConnectorFailReason)reason;
	-(void) OnDisconnected:(ConnectorDisconnectReason)reason;
@end
@protocol IRegisterLocalCameraEventListener

	-(void) OnLocalCameraAdded:(LocalCamera*)localCamera;
	-(void) OnLocalCameraRemoved:(LocalCamera*)localCamera;
	-(void) OnLocalCameraSelected:(LocalCamera*)localCamera;
	-(void) OnLocalCameraStateUpdated:(LocalCamera*)localCamera State:(DeviceState)state;
@end
@protocol IRegisterLocalMicrophoneEventListener

	-(void) OnLocalMicrophoneAdded:(LocalMicrophone*)localMicrophone;
	-(void) OnLocalMicrophoneRemoved:(LocalMicrophone*)localMicrophone;
	-(void) OnLocalMicrophoneSelected:(LocalMicrophone*)localMicrophone;
	-(void) OnLocalMicrophoneStateUpdated:(LocalMicrophone*)localMicrophone State:(DeviceState)state;
@end
@protocol IRegisterLocalMonitorEventListener

	-(void) OnLocalMonitorAdded:(LocalMonitor*)localMonitor;
	-(void) OnLocalMonitorRemoved:(LocalMonitor*)localMonitor;
	-(void) OnLocalMonitorSelected:(LocalMonitor*)localMonitor;
	-(void) OnLocalMonitorStateUpdated:(LocalMonitor*)localMonitor State:(DeviceState)state;
@end
@protocol IRegisterLocalSpeakerEventListener

	-(void) OnLocalSpeakerAdded:(LocalSpeaker*)localSpeaker;
	-(void) OnLocalSpeakerRemoved:(LocalSpeaker*)localSpeaker;
	-(void) OnLocalSpeakerSelected:(LocalSpeaker*)localSpeaker;
	-(void) OnLocalSpeakerStateUpdated:(LocalSpeaker*)localSpeaker State:(DeviceState)state;
@end
@protocol IRegisterLocalWindowShareEventListener

	-(void) OnLocalWindowShareAdded:(LocalWindowShare*)localWindowShare;
	-(void) OnLocalWindowShareRemoved:(LocalWindowShare*)localWindowShare;
	-(void) OnLocalWindowShareSelected:(LocalWindowShare*)localWindowShare;
	-(void) OnLocalWindowShareStateUpdated:(LocalWindowShare*)localWindowShare State:(DeviceState)state;
@end
@protocol IRegisterLogEventListener

	-(void) OnLog:(LogRecord*)logRecord;
@end
@protocol IRegisterMessageEventListener

	-(void) OnChatMessageReceived:(Participant*)participant ChatMessage:(ChatMessage*)chatMessage;
@end
@protocol IRegisterNetworkInterfaceEventListener

	-(void) OnNetworkInterfaceAdded:(NetworkInterface*)networkInterface;
	-(void) OnNetworkInterfaceRemoved:(NetworkInterface*)networkInterface;
	-(void) OnNetworkInterfaceSelected:(NetworkInterface*)networkInterface TransportType:(NetworkInterfaceTransportType)transportType;
	-(void) OnNetworkInterfaceStateUpdated:(NetworkInterface*)networkInterface State:(NetworkInterfaceState)state;
@end
@protocol IRegisterParticipantEventListener

	-(void) OnParticipantJoined:(Participant*)participant;
	-(void) OnParticipantLeft:(Participant*)participant;
	-(void) OnDynamicParticipantChanged:(NSMutableArray*)participants RemoteCameras:(NSMutableArray*)remoteCameras;
	-(void) OnLoudestParticipantChanged:(Participant*)participant AudioOnly:(BOOL)audioOnly;
@end
@protocol IRegisterRecoderInCallEventListener

	-(void) RecorderInCall:(BOOL)recorderInCall;
@end
@protocol IRegisterRemoteCameraEventListener

	-(void) OnRemoteCameraAdded:(RemoteCamera*)remoteCamera Participant:(Participant*)participant;
	-(void) OnRemoteCameraRemoved:(RemoteCamera*)remoteCamera Participant:(Participant*)participant;
	-(void) OnRemoteCameraStateUpdated:(RemoteCamera*)remoteCamera Participant:(Participant*)participant State:(DeviceState)state;
@end
@protocol IRegisterRemoteMicrophoneEventListener

	-(void) OnRemoteMicrophoneAdded:(RemoteMicrophone*)remoteMicrophone Participant:(Participant*)participant;
	-(void) OnRemoteMicrophoneRemoved:(RemoteMicrophone*)remoteMicrophone Participant:(Participant*)participant;
	-(void) OnRemoteMicrophoneStateUpdated:(RemoteMicrophone*)remoteMicrophone Participant:(Participant*)participant State:(DeviceState)state;
@end
@protocol IRegisterRemoteWindowShareEventListener

	-(void) OnRemoteWindowShareAdded:(RemoteWindowShare*)remoteWindowShare Participant:(Participant*)participant;
	-(void) OnRemoteWindowShareRemoved:(RemoteWindowShare*)remoteWindowShare Participant:(Participant*)participant;
	-(void) OnRemoteWindowShareStateUpdated:(RemoteWindowShare*)remoteWindowShare Participant:(Participant*)participant State:(DeviceState)state;
@end
@protocol IRegisterResourceManagerEventListener

	-(void) OnAvailableResourcesChanged:(unsigned int)cpuEncode CpuDecode:(unsigned int)cpuDecode BandwidthSend:(unsigned int)bandwidthSend BandwidthReceive:(unsigned int)bandwidthReceive;
	-(void) OnMaxRemoteSourcesChanged:(unsigned int)maxRemoteSources;
@end
@protocol IRegisterWebProxyEventListener

	-(void) OnWebProxyCredentialsRequest;
@end
@interface Connector : NSObject
{
	void* objPtr;
	@public
	id<IConnect> connect;
	id<IRegisterLocalCameraEventListener> registerLocalCameraEventListener;
	id<IRegisterLocalMicrophoneEventListener> registerLocalMicrophoneEventListener;
	id<IRegisterLocalMonitorEventListener> registerLocalMonitorEventListener;
	id<IRegisterLocalSpeakerEventListener> registerLocalSpeakerEventListener;
	id<IRegisterLocalWindowShareEventListener> registerLocalWindowShareEventListener;
	id<IRegisterLogEventListener> registerLogEventListener;
	id<IRegisterMessageEventListener> registerMessageEventListener;
	id<IRegisterNetworkInterfaceEventListener> registerNetworkInterfaceEventListener;
	id<IRegisterParticipantEventListener> registerParticipantEventListener;
	id<IRegisterRecoderInCallEventListener> registerRecoderInCallEventListener;
	id<IRegisterRemoteCameraEventListener> registerRemoteCameraEventListener;
	id<IRegisterRemoteMicrophoneEventListener> registerRemoteMicrophoneEventListener;
	id<IRegisterRemoteWindowShareEventListener> registerRemoteWindowShareEventListener;
	id<IRegisterResourceManagerEventListener> registerResourceManagerEventListener;
	id<IRegisterWebProxyEventListener> registerWebProxyEventListener;
}

	-(id) init:(void*)viewId ViewStyle:(ConnectorViewStyle)viewStyle RemoteParticipants:(unsigned int)remoteParticipants LogFileFilter:(const char*)logFileFilter LogFileName:(const char*)logFileName UserData:(long)userData;
	-(void) dealloc;
	-(BOOL) AssignViewToLocalCamera:(void*)viewId LocalCamera:(LocalCamera*)localCamera DisplayCropped:(BOOL)displayCropped AllowZoom:(BOOL)allowZoom;
	-(BOOL) AssignViewToRemoteCamera:(void*)viewId RemoteCamera:(RemoteCamera*)remoteCamera DisplayCropped:(BOOL)displayCropped AllowZoom:(BOOL)allowZoom;
	-(BOOL) AssignViewToRemoteWindowShare:(void*)viewId RemoteWindowShare:(RemoteWindowShare*)remoteWindowShare DisplayCropped:(BOOL)displayCropped AllowZoom:(BOOL)allowZoom;
	-(BOOL) Connect:(const char*)host Token:(const char*)token DisplayName:(const char*)displayName ResourceId:(const char*)resourceId Connect:(id<IConnect>)connect;
	-(BOOL) CycleCamera;
	-(BOOL) CycleMicrophone;
	-(BOOL) CycleSpeaker;
	-(void) Disable;
	-(void) DisableDebug;
	-(void) Disconnect;
	-(BOOL) EnableDebug:(unsigned int)port LogFilter:(const char*)logFilter;
	-(ConnectorState) GetState;
	-(NSString*) GetStatsJson;
	-(NSString*) GetVersion;
	-(BOOL) HideView:(void*)viewId;
	-(BOOL) RegisterLocalCameraEventListener:(id<IRegisterLocalCameraEventListener>)registerLocalCameraEventListener;
	-(BOOL) RegisterLocalMicrophoneEventListener:(id<IRegisterLocalMicrophoneEventListener>)registerLocalMicrophoneEventListener;
	-(BOOL) RegisterLocalMonitorEventListener:(id<IRegisterLocalMonitorEventListener>)registerLocalMonitorEventListener;
	-(BOOL) RegisterLocalSpeakerEventListener:(id<IRegisterLocalSpeakerEventListener>)registerLocalSpeakerEventListener;
	-(BOOL) RegisterLocalWindowShareEventListener:(id<IRegisterLocalWindowShareEventListener>)registerLocalWindowShareEventListener;
	-(BOOL) RegisterLogEventListener:(id<IRegisterLogEventListener>)registerLogEventListener Filter:(const char*)filter;
	-(BOOL) RegisterMessageEventListener:(id<IRegisterMessageEventListener>)registerMessageEventListener;
	-(BOOL) RegisterNetworkInterfaceEventListener:(id<IRegisterNetworkInterfaceEventListener>)registerNetworkInterfaceEventListener;
	-(BOOL) RegisterParticipantEventListener:(id<IRegisterParticipantEventListener>)registerParticipantEventListener;
	-(BOOL) RegisterRecoderInCallEventListener:(id<IRegisterRecoderInCallEventListener>)registerRecoderInCallEventListener;
	-(BOOL) RegisterRemoteCameraEventListener:(id<IRegisterRemoteCameraEventListener>)registerRemoteCameraEventListener;
	-(BOOL) RegisterRemoteMicrophoneEventListener:(id<IRegisterRemoteMicrophoneEventListener>)registerRemoteMicrophoneEventListener;
	-(BOOL) RegisterRemoteWindowShareEventListener:(id<IRegisterRemoteWindowShareEventListener>)registerRemoteWindowShareEventListener;
	-(BOOL) RegisterResourceManagerEventListener:(id<IRegisterResourceManagerEventListener>)registerResourceManagerEventListener;
	-(BOOL) RegisterWebProxyEventListener:(id<IRegisterWebProxyEventListener>)registerWebProxyEventListener;
	-(BOOL) SelectDefaultCamera;
	-(BOOL) SelectDefaultMicrophone;
	-(BOOL) SelectDefaultNetworkInterfaceForMedia;
	-(BOOL) SelectDefaultNetworkInterfaceForSignaling;
	-(BOOL) SelectDefaultSpeaker;
	-(BOOL) SelectLocalCamera:(LocalCamera*)localCamera;
	-(BOOL) SelectLocalMicrophone:(LocalMicrophone*)localMicrophone;
	-(BOOL) SelectLocalMonitor:(LocalMonitor*)localMonitor;
	-(BOOL) SelectLocalSpeaker:(LocalSpeaker*)localSpeaker;
	-(BOOL) SelectLocalWindowShare:(LocalWindowShare*)localWindowShare;
	-(BOOL) SelectNetworkInterfaceForMedia:(NetworkInterface*)networkInterface;
	-(BOOL) SelectNetworkInterfaceForSignaling:(NetworkInterface*)networkInterface;
	-(BOOL) SendChatMessage:(const char*)message;
	-(BOOL) SetCameraPrivacy:(BOOL)privacy;
	-(BOOL) SetLocation:(double)latitude Longitude:(double)longitude;
	-(BOOL) SetMicrophonePrivacy:(BOOL)privacy;
	-(BOOL) SetMode:(ConnectorMode)mode;
	-(BOOL) SetPreview:(BOOL)preview;
	-(BOOL) SetSpeakerPrivacy:(BOOL)privacy;
	-(BOOL) SetViewAnimationSpeed:(void*)viewId SpeedPercentage:(unsigned int)speedPercentage;
	-(BOOL) SetViewBackgroundColor:(void*)viewId Red:(unsigned char)red Green:(unsigned char)green Blue:(unsigned char)blue;
	-(void) SetWebProxyAddressCredentials:(const char*)proxyAddress Username:(const char*)username Password:(const char*)password;
	-(BOOL) ShowAudioMeters:(void*)viewId ShowMeters:(BOOL)showMeters;
	-(BOOL) ShowPreview:(BOOL)preview;
	-(BOOL) ShowViewAt:(void*)viewId X:(int)x Y:(int)y Width:(unsigned int)width Height:(unsigned int)height;
	-(BOOL) ShowViewLabel:(void*)viewId ShowLabel:(BOOL)showLabel;
	-(BOOL) UnregisterLocalCameraEventListener;
	-(BOOL) UnregisterLocalMicrophoneEventListener;
	-(BOOL) UnregisterLocalMonitorEventListener;
	-(BOOL) UnregisterLocalSpeakerEventListener;
	-(BOOL) UnregisterLocalWindowShareEventListener;
	-(BOOL) UnregisterLogEventListener;
	-(BOOL) UnregisterMessageEventListener;
	-(BOOL) UnregisterNetworkInterfaceEventListener;
	-(BOOL) UnregisterParticipantEventListener;
	-(BOOL) UnregisterRecoderInCallEventListener;
	-(BOOL) UnregisterRemoteCameraEventListener;
	-(BOOL) UnregisterRemoteMicrophoneEventListener;
	-(BOOL) UnregisterRemoteWindowShareEventListener;
	-(BOOL) UnregisterResourceManagerEventListener;
	-(BOOL) UnregisterWebProxyEventListener;
	-(id) initWithObject:(void*)rPtr;
	-(void*)GetObjectPtr;
@end
