//
//	VidyoCalendarManager_Objc.h
//	VidyoClient
//
//	This file is auto generated, do not edit this file
//	Copyright (c) 2016 Vidyo, Inc. All rights reserved.
//

#import "VidyoCalendar_Objc.h"
#import "VidyoFormField_Objc.h"
@class CalendarManager;
@class CalendarManagerFeedback;
@class FormFieldOption;
typedef NS_ENUM(NSInteger, CalendarCreateResult){
	CALENDARCREATERESULT_InvalidConnParams,
	CALENDARCREATERESULT_InvalidType,
	CALENDARCREATERESULT_Ok
};
typedef NS_ENUM(NSInteger, CalendarServiceStatus){
	CALENDARSERVICESTATUS_ApiProcError,
	CALENDARSERVICESTATUS_Available,
	CALENDARSERVICESTATUS_DllNotFound,
	CALENDARSERVICESTATUS_Init,
	CALENDARSERVICESTATUS_LoadError,
	CALENDARSERVICESTATUS_Loaded,
	CALENDARSERVICESTATUS_PluginSvcAuthRequired,
	CALENDARSERVICESTATUS_PluginSvcNotActive,
	CALENDARSERVICESTATUS_PluginSvcNotInstalled,
	CALENDARSERVICESTATUS_Unloaded
};
typedef NS_ENUM(NSInteger, FormFieldTextWrapMode){
	FORMFIELDTEXTWRAPMODE_Off,
	FORMFIELDTEXTWRAPMODE_Physical,
	FORMFIELDTEXTWRAPMODE_Virtual
};
@protocol ICalendarManagerFeedback
@optional

	-(void) CalendarCreated:(CalendarManager*)cm Calendar:(Calendar*)calendar ResultCode:(CalendarServiceCode)resultCode CreateToken:(NSMutableString*)createToken;
	-(void) ServiceDiscovery:(CalendarManager*)cm T:(NSMutableString*)t S:(CalendarServiceStatus)s;
	-(void) Uninitialized:(CalendarManager*)cm;
@end
@interface CalendarManagerFeedback : NSObject<ICalendarManagerFeedback>
{
	void* objPtr;
}
	-(id) init;
	-(void) dealloc;
	-(void*)GetObjectPtr;
@end
@interface CalendarManager : NSObject
{
	void* objPtr;
}

	-(id) init:(CalendarManagerFeedback*)feedback;
	-(void) dealloc;
	-(BOOL) CreateCalendarInstance:(CalendarFeedback*)feedback SvcId:(NSMutableString*)svcId CalendarName:(NSMutableString*)calendarName CreateToken:(NSMutableString*)createToken;
	-(void) DeleteCalendarInstance:(Calendar*)cal;
	-(BOOL) GetCalendarTypes:(NSMutableArray*)serviceTypes;
	-(BOOL) Initialize;
	-(BOOL) SetCalendarTypes:(NSMutableArray*)serviceTypes;
	-(BOOL) Uninitialize;
	-(id) initWithObject:(void*)rPtr;
	-(void*)GetObjectPtr;
@end
@interface FormField : NSObject
{
	@public
	unsigned int cols;
	unsigned int maxlength;
	BOOL multiple;
	NSMutableString* name;
	NSMutableArray* options;
	unsigned int rows;
	unsigned int size;
	FormFieldType type;
	NSMutableString* value;
	FormFieldTextWrapMode wrap;
}

@end
@interface FormFieldOption : NSObject
{
	@public
	BOOL selected;
	NSMutableString* value;
}

@end
